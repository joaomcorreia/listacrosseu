# Generated by Django 4.2.7 on 2025-10-02 14:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Domain must be in format: yourname.listacrosseu.com', regex='^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\\.listacrosseu\\.com$')], verbose_name='domain name')),
                ('status', models.CharField(choices=[('available', 'Available'), ('reserved', 'Reserved'), ('active', 'Active'), ('suspended', 'Suspended')], default='available', max_length=20, verbose_name='status')),
                ('is_ssl_enabled', models.BooleanField(default=True, verbose_name='SSL enabled')),
                ('dns_configured', models.BooleanField(default=False, verbose_name='DNS configured')),
                ('reserved_at', models.DateTimeField(blank=True, null=True, verbose_name='reserved at')),
                ('activated_at', models.DateTimeField(blank=True, null=True, verbose_name='activated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domains', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Domain',
                'verbose_name_plural': 'Domains',
                'ordering': ['domain_name'],
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, verbose_name='website title')),
                ('tagline', models.CharField(blank=True, max_length=200, verbose_name='tagline')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('theme', models.CharField(choices=[('modern', 'Modern Business'), ('classic', 'Classic Professional'), ('minimal', 'Minimal Clean'), ('creative', 'Creative Portfolio'), ('corporate', 'Corporate Blue')], default='modern', max_length=20, verbose_name='theme')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='website_logos/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='website_favicons/')),
                ('primary_color', models.CharField(default='#1e40af', max_length=7, verbose_name='primary color')),
                ('secondary_color', models.CharField(default='#64748b', max_length=7, verbose_name='secondary color')),
                ('about_text', models.TextField(blank=True, verbose_name='about text')),
                ('services_text', models.TextField(blank=True, verbose_name='services text')),
                ('contact_text', models.TextField(blank=True, verbose_name='contact text')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='contact email')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='contact phone')),
                ('contact_address', models.TextField(blank=True, verbose_name='contact address')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook URL')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter URL')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn URL')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram URL')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='meta title')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='meta description')),
                ('keywords', models.CharField(blank=True, max_length=500, verbose_name='keywords')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('suspended', 'Suspended')], default='draft', max_length=20, verbose_name='status')),
                ('show_business_listings', models.BooleanField(default=True, verbose_name='show business listings')),
                ('show_contact_form', models.BooleanField(default=True, verbose_name='show contact form')),
                ('show_social_links', models.BooleanField(default=True, verbose_name='show social links')),
                ('google_analytics_id', models.CharField(blank=True, max_length=50, verbose_name='Google Analytics ID')),
                ('page_views', models.PositiveIntegerField(default=0, verbose_name='page views')),
                ('unique_visitors', models.PositiveIntegerField(default=0, verbose_name='unique visitors')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
                ('domain', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='website', to='websites.domain')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='website', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Website',
                'verbose_name_plural': 'Websites',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebsiteImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='website_images/')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='alt text')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='caption')),
                ('is_gallery_image', models.BooleanField(default=False, verbose_name='gallery image')),
                ('is_hero_image', models.BooleanField(default=False, verbose_name='hero image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='websites.website')),
            ],
            options={
                'verbose_name': 'Website Image',
                'verbose_name_plural': 'Website Images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('subject', models.CharField(max_length=200, verbose_name='subject')),
                ('message', models.TextField(verbose_name='message')),
                ('status', models.CharField(choices=[('new', 'New'), ('read', 'Read'), ('replied', 'Replied'), ('archived', 'Archived')], default='new', max_length=20, verbose_name='status')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('admin_notes', models.TextField(blank=True, verbose_name='admin notes')),
                ('replied_at', models.DateTimeField(blank=True, null=True, verbose_name='replied at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_submissions', to='websites.website')),
            ],
            options={
                'verbose_name': 'Contact Submission',
                'verbose_name_plural': 'Contact Submissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebsitePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='page title')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('content', models.TextField(verbose_name='content')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='meta title')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='meta description')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=20, verbose_name='status')),
                ('show_in_menu', models.BooleanField(default=True, verbose_name='show in menu')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='sort order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='websites.website')),
            ],
            options={
                'verbose_name': 'Website Page',
                'verbose_name_plural': 'Website Pages',
                'ordering': ['sort_order', 'title'],
                'unique_together': {('website', 'slug')},
            },
        ),
    ]
