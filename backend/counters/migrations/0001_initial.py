# Generated by Django 5.2.7 on 2025-11-01 17:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('geo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CounterRebuildLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rebuilt_at', models.DateTimeField(auto_now_add=True)),
                ('rebuild_type', models.CharField(default='full', max_length=50)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-rebuilt_at'],
            },
        ),
        migrations.CreateModel(
            name='CategoryCityTown',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_count', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.category')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.city')),
                ('town', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.town')),
            ],
            options={
                'verbose_name': 'Category City Town Count',
                'verbose_name_plural': 'Category City Town Counts',
                'indexes': [models.Index(fields=['category', 'city'], name='counters_ca_categor_c60d6f_idx'), models.Index(fields=['town'], name='counters_ca_town_id_3a7f64_idx'), models.Index(fields=['business_count'], name='counters_ca_busines_143069_idx')],
                'unique_together': {('category', 'city', 'town')},
            },
        ),
        migrations.CreateModel(
            name='CategoryCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_count', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.category')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.country')),
            ],
            options={
                'verbose_name': 'Category Country Count',
                'verbose_name_plural': 'Category Country Counts',
                'indexes': [models.Index(fields=['category'], name='counters_ca_categor_d7ed8c_idx'), models.Index(fields=['country'], name='counters_ca_country_6d868a_idx'), models.Index(fields=['business_count'], name='counters_ca_busines_3214fd_idx')],
                'unique_together': {('category', 'country')},
            },
        ),
        migrations.CreateModel(
            name='CategoryCountryCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_count', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.category')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.city')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.country')),
            ],
            options={
                'verbose_name': 'Category Country City Count',
                'verbose_name_plural': 'Category Country City Counts',
                'indexes': [models.Index(fields=['category', 'country'], name='counters_ca_categor_dff524_idx'), models.Index(fields=['city'], name='counters_ca_city_id_a89cac_idx'), models.Index(fields=['business_count'], name='counters_ca_busines_1a58c1_idx')],
                'unique_together': {('category', 'country', 'city')},
            },
        ),
    ]
