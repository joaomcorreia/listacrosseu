# Generated by Django 4.2.7 on 2025-10-02 14:58

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('plan_type', models.CharField(choices=[('free', 'Free'), ('local', 'Local'), ('country', 'Country'), ('eu', 'EU')], max_length=20, unique=True, verbose_name='plan type')),
                ('description', models.TextField(verbose_name='description')),
                ('monthly_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='monthly price')),
                ('yearly_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='yearly price')),
                ('max_listings', models.PositiveIntegerField(help_text='0 = unlimited', verbose_name='max listings')),
                ('can_create_website', models.BooleanField(default=False, verbose_name='can create website')),
                ('can_choose_domain', models.BooleanField(default=False, verbose_name='can choose domain')),
                ('can_upload_logo', models.BooleanField(default=False, verbose_name='can upload logo')),
                ('priority_support', models.BooleanField(default=False, verbose_name='priority support')),
                ('featured_listings', models.BooleanField(default=False, verbose_name='featured listings')),
                ('analytics_access', models.BooleanField(default=False, verbose_name='analytics access')),
                ('api_access', models.BooleanField(default=False, verbose_name='API access')),
                ('stripe_monthly_price_id', models.CharField(blank=True, max_length=100, verbose_name='Stripe monthly price ID')),
                ('stripe_yearly_price_id', models.CharField(blank=True, max_length=100, verbose_name='Stripe yearly price ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='sort order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['sort_order', 'monthly_price'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('billing_period', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', max_length=20, verbose_name='billing period')),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('past_due', 'Past Due'), ('trialing', 'Trialing')], default='active', max_length=20, verbose_name='status')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='start date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='end date')),
                ('current_period_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='current period start')),
                ('current_period_end', models.DateTimeField(blank=True, null=True, verbose_name='current period end')),
                ('trial_end', models.DateTimeField(blank=True, null=True, verbose_name='trial end')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='cancelled at')),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, verbose_name='Stripe subscription ID')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100, verbose_name='Stripe customer ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='subscriptions.subscriptionplan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='invoice number')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open'), ('paid', 'Paid'), ('void', 'Void'), ('uncollectible', 'Uncollectible')], default='draft', max_length=20, verbose_name='status')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='subtotal')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='tax amount')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='total amount')),
                ('issue_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='issue date')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='due date')),
                ('paid_date', models.DateTimeField(blank=True, null=True, verbose_name='paid date')),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=100, verbose_name='Stripe invoice ID')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='invoices/')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='subscriptions.subscription')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listings_used', models.PositiveIntegerField(default=0, verbose_name='listings used')),
                ('api_calls_used', models.PositiveIntegerField(default=0, verbose_name='API calls used')),
                ('storage_used', models.PositiveIntegerField(default=0, verbose_name='storage used (MB)')),
                ('period_start', models.DateTimeField(verbose_name='period start')),
                ('period_end', models.DateTimeField(verbose_name='period end')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage', to='subscriptions.subscription')),
            ],
            options={
                'verbose_name': 'Subscription Usage',
                'verbose_name_plural': 'Subscription Usages',
                'ordering': ['-period_start'],
                'unique_together': {('subscription', 'period_start')},
            },
        ),
    ]
