# Generated by Django 5.2.7 on 2025-10-31 23:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{2}$', 'Country code must be 2 uppercase letters')])),
                ('name', models.CharField(max_length=100)),
                ('default_locale', models.CharField(default='en', help_text='Default language locale for this country (e.g., en, fr, nl)', max_length=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True, validators=[django.core.validators.RegexValidator('^[a-z]{2}$', 'Language code must be 2 lowercase letters')])),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SeoPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('basic', 'Basic'), ('growth', 'Growth'), ('premium', 'Premium')], max_length=20, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('features', models.JSONField(default=dict, help_text='JSON object defining available features for this plan')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (0=Basic, 1=Growth, 2=Premium)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SeoPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200)),
                ('page_type', models.CharField(choices=[('home', 'Home'), ('service', 'Service'), ('city', 'City'), ('country', 'Country'), ('blog', 'Blog'), ('custom', 'Custom')], default='custom', max_length=20)),
                ('meta_title', models.CharField(help_text='Page title (max 60 chars for optimal SEO)', max_length=60, validators=[django.core.validators.MaxLengthValidator(60)])),
                ('meta_description', models.TextField(help_text='Meta description (max 160 chars)', max_length=160, validators=[django.core.validators.MaxLengthValidator(160)])),
                ('h1', models.CharField(help_text='Main page heading', max_length=100)),
                ('h2', models.CharField(blank=True, help_text='Secondary heading', max_length=100)),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this page')),
                ('robots', models.CharField(choices=[('index,follow', 'Index, Follow'), ('index,nofollow', 'Index, No Follow'), ('noindex,follow', 'No Index, Follow'), ('noindex,nofollow', 'No Index, No Follow')], default='index,follow', max_length=20)),
                ('image_alt_fallback', models.CharField(blank=True, help_text='Default alt text for images', max_length=125)),
                ('keywords_hint', models.TextField(blank=True, help_text='Comma-separated keywords for content optimization')),
                ('internal_links', models.JSONField(blank=True, default=list, help_text='Array of {title, href} objects for internal linking')),
                ('sitemap_include', models.BooleanField(default=True, help_text='Include in XML sitemap')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title', max_length=60)),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description', max_length=160)),
                ('og_image_url', models.URLField(blank=True, help_text='Open Graph image URL')),
                ('twitter_card', models.CharField(blank=True, choices=[('summary', 'Summary'), ('summary_large_image', 'Summary Large Image'), ('app', 'App'), ('player', 'Player')], default='summary', max_length=20)),
                ('twitter_image_url', models.URLField(blank=True, help_text='Twitter card image URL')),
                ('json_ld', models.TextField(blank=True, help_text='JSON-LD structured data (Premium feature)')),
                ('breadcrumbs', models.JSONField(blank=True, default=list, help_text='Breadcrumb navigation structure')),
                ('local_business_schema', models.JSONField(blank=True, default=dict, help_text='Local business schema markup')),
                ('service_schema', models.JSONField(blank=True, default=dict, help_text='Service schema markup')),
                ('is_published', models.BooleanField(default=False)),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='seo.country')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seo.language')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='seo.seoplan')),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('country', 'language', 'slug', 'page_type')},
            },
        ),
        migrations.CreateModel(
            name='SeoContentBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Content block identifier (e.g., intro, features, cta)', max_length=50)),
                ('content', models.TextField(help_text='Rich text or markdown content')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('seo_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_blocks', to='seo.seopage')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('seo_page', 'key')},
            },
        ),
    ]
