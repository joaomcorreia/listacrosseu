# Generated by Django 5.0.7 on 2025-10-05 12:54

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('businesses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claimant_name', models.CharField(max_length=100)),
                ('claimant_email', models.EmailField(max_length=254)),
                ('claimant_phone', models.CharField(max_length=17)),
                ('ownership_proof', models.FileField(upload_to='claims/proof/')),
                ('verification_method', models.CharField(choices=[('business_license', 'Business License'), ('utility_bill', 'Utility Bill'), ('lease_agreement', 'Lease Agreement'), ('tax_document', 'Tax Document'), ('other', 'Other Documentation')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='businesses.business')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'business_claims',
            },
        ),
        migrations.CreateModel(
            name='BusinessRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('business_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('address', models.CharField(max_length=300)),
                ('postal_code', models.CharField(max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in format: '+999999999'. Up to 15 digits.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_email', models.EmailField(max_length=254)),
                ('owner_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in format: '+999999999'. Up to 15 digits.", regex='^\\+?1?\\d{9,15}$')])),
                ('opening_hours', models.JSONField(blank=True, default=dict)),
                ('price_range', models.CharField(blank=True, choices=[('$', 'Budget'), ('$$', 'Moderate'), ('$$$', 'Expensive'), ('$$$$', 'Very Expensive')], max_length=10)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Review'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('needs_info', 'Needs More Information')], default='pending', max_length=20)),
                ('verification_notes', models.TextField(blank=True)),
                ('business_license', models.FileField(blank=True, null=True, upload_to='registrations/licenses/')),
                ('business_photos', models.JSONField(blank=True, default=list)),
                ('email_verification_code', models.CharField(blank=True, max_length=6)),
                ('phone_verification_code', models.CharField(blank=True, max_length=6)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('wants_premium', models.BooleanField(default=False)),
                ('premium_plan', models.CharField(choices=[('basic', 'Basic Listing - Free'), ('enhanced', 'Enhanced Listing - €9.99/month'), ('premium', 'Premium Listing - €19.99/month'), ('featured', 'Featured Listing - €39.99/month')], default='basic', max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='businesses.category')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='businesses.city')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'business_registrations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BusinessPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='registrations/photos/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='businesses.businessregistration')),
            ],
            options={
                'db_table': 'business_photos',
            },
        ),
    ]
